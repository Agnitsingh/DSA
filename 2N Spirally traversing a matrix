// TIME COMPLEXITY - O(r*c)

class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        vector<int> answer;
        int left = 0;
        int right = c-1;
        int top = 0;
        int bottom = r-1;
        
        while(left<=right && top<=bottom)
        {
            // RIGHT
            for(int i=left; i<=right; i++)
            {
                answer.push_back(matrix[top][i]);
            }
            
            top = top+1;
            
            // BOTTOM
            for(int i=top; i<=bottom; i++)
            {
                answer.push_back(matrix[i][right]);
            }
            right = right-1;
            
            // LEFT
            if(top<=bottom)
            {
                for(int i=right; i>=left; i--)
                {
                    answer.push_back(matrix[bottom][i]);
                }
            }
            bottom = bottom-1;
            
            // UP
            if(left<=right)
            {
                for(int i=bottom; i>=top; i--)
                {
                    answer.push_back(matrix[i][left]);
                }
            }
            
            left = left+1;
        }
        
        return answer;
    }
};

