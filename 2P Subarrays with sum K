// TIME COMPLEXITY - O(NlogN)
// SPACE COMPLEXITY - O(N)

class Solution{
    public:
    int findSubArraySum(int Arr[], int N, int k)
    {
        map<int,int> mymap;
        int tempSum = 0;
        int count = 0;
        mymap[0] = 1;
        
        for(int i=0; i<N; i++)
        {
            tempSum = tempSum + Arr[i];
            int rem = tempSum-k;
            if(mymap.find(rem) != mymap.end())
            {
                count = count + mymap[rem];
            }
            
            mymap[tempSum]++;
        }
        
        return count;
    }
};
