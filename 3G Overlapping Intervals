class Solution {
public:
    vector<vector<int>> overlappedInterval(vector<vector<int>>& intervals) {
         vector<vector<int>> answer;
         sort(intervals.begin(), intervals.end());
         for(int i=0; i<intervals.size(); i++)
         {
             // Create New Interval
             if(answer.size() == 0 || intervals[i][0]>answer.back()[1])
             {
                 answer.push_back(intervals[i]);
             }
             // Update
             else
             {
                answer.back()[1] = max(intervals[i][1],answer.back()[1]); 
             }
         }
         return answer;
    }
};

// TIME COMPLEXITY - O(NlogN) + O(N)
// SPACE COMPLEXITY - O(N) To return answer..
