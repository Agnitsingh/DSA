class Solution{
    public:

    vector<vector<int> > fourSum(vector<int> &arr, int k) {
        sort(arr.begin(), arr.end());
        vector<vector<int>> answer;
        int n = arr.size();
        
        for(int i=0; i<n; i++)
        {   
            if(i>0 && arr[i]==arr[i-1]) continue;
            for(int j=i+1; j<n; j++)
            {
                if(j>i+1 && arr[j]==arr[j-1]) continue;
                int x = j+1;
                int y = n-1;
                
                while(x<y)
                {
                    int sum = arr[i] + arr[j] + arr[x] + arr[y];
                    
                    if(sum<k) x++;
                    else if(sum>k) y--;
                    else
                    {
                        vector<int> temp = {arr[i],arr[j],arr[x],arr[y]};
                        answer.push_back(temp);
                        x++;
                        y--;
                        while((x<y) && arr[x] == arr[x-1]) x++;
                        while((x<y) && arr[y] == arr[y+1]) y--;
                    }
                }
            }
        }
        return answer;
    }
};

// TIME COMPLEXITY - O(n^2)
